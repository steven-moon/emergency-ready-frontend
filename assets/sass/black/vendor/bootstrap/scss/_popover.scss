.black-container {
  .popover {
    position: absolute;
    top: 0;
    left: 0;
    z-index: $black-zindex-popover;
    display: block;
    max-width: $black-popover-max-width;
    // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
    // So reset our font and text properties to avoid inheriting weird values.
    @include reset-text();
    @include font-size($black-popover-font-size);
    // Allow breaking very long words so they don't overflow the popover's bounds
    word-wrap: break-word;
    background-color: $black-popover-bg;
    background-clip: padding-box;
    border: $black-popover-border-width solid $black-popover-border-color;
    @include border-radius($black-popover-border-radius);
    @include box-shadow($black-popover-box-shadow);

    .arrow {
      position: absolute;
      display: block;
      width: $black-popover-arrow-width;
      height: $black-popover-arrow-height;
      margin: 0 $black-popover-border-radius;

      &::before,
      &::after {
        position: absolute;
        display: block;
        content: "";
        border-color: transparent;
        border-style: solid;
      }
    }
  }

  .bs-popover-top {
    margin-bottom: $black-popover-arrow-height;

    > .arrow {
      bottom: subtract(-$black-popover-arrow-height, $black-popover-border-width);

      &::before {
        bottom: 0;
        border-width: $black-popover-arrow-height calc($black-popover-arrow-width / 2) 0;
        border-top-color: $black-popover-arrow-outer-color;
      }

      &::after {
        bottom: $black-popover-border-width;
        border-width: $black-popover-arrow-height calc($black-popover-arrow-width / 2) 0;
        border-top-color: $black-popover-arrow-color;
      }
    }
  }

  .bs-popover-right {
    margin-left: $black-popover-arrow-height;

    > .arrow {
      left: subtract(-$black-popover-arrow-height, $black-popover-border-width);
      width: $black-popover-arrow-height;
      height: $black-popover-arrow-width;
      margin: $black-popover-border-radius 0; // make sure the arrow does not touch the popover's rounded corners

      &::before {
        left: 0;
        border-width: calc($black-popover-arrow-width / 2) $black-popover-arrow-height calc($black-popover-arrow-width / 2) 0;
        border-right-color: $black-popover-arrow-outer-color;
      }

      &::after {
        left: $black-popover-border-width;
        border-width: calc($black-popover-arrow-width / 2) $black-popover-arrow-height calc($black-popover-arrow-width / 2) 0;
        border-right-color: $black-popover-arrow-color;
      }
    }
  }

  .bs-popover-bottom {
    margin-top: $black-popover-arrow-height;

    > .arrow {
      top: subtract(-$black-popover-arrow-height, $black-popover-border-width);

      &::before {
        top: 0;
        border-width: 0 calc($black-popover-arrow-width / 2) $black-popover-arrow-height calc($black-popover-arrow-width / 2);
        border-bottom-color: $black-popover-arrow-outer-color;
      }

      &::after {
        top: $black-popover-border-width;
        border-width: 0 calc($black-popover-arrow-width / 2) $black-popover-arrow-height calc($black-popover-arrow-width / 2);
        border-bottom-color: $black-popover-arrow-color;
      }
    }

    // This will remove the popover-header's border just below the arrow
    .popover-header::before {
      position: absolute;
      top: 0;
      left: 50%;
      display: block;
      width: $black-popover-arrow-width;
      margin-left: -$black-popover-arrow-width / 2;
      content: "";
      border-bottom: $black-popover-border-width solid $black-popover-header-bg;
    }
  }

  .bs-popover-left {
    margin-right: $black-popover-arrow-height;

    > .arrow {
      right: subtract(-$black-popover-arrow-height, $black-popover-border-width);
      width: $black-popover-arrow-height;
      height: $black-popover-arrow-width;
      margin: $black-popover-border-radius 0; // make sure the arrow does not touch the popover's rounded corners

      &::before {
        right: 0;
        border-width: calc($black-popover-arrow-width / 2) 0 calc($black-popover-arrow-width / 2) $black-popover-arrow-height;
        border-left-color: $black-popover-arrow-outer-color;
      }

      &::after {
        right: $black-popover-border-width;
        border-width: calc($black-popover-arrow-width / 2) 0 calc($black-popover-arrow-width / 2) $black-popover-arrow-height;
        border-left-color: $black-popover-arrow-color;
      }
    }
  }

  .bs-popover-auto {
    &[x-placement^="top"] {
      @extend .bs-popover-top;
    }

    &[x-placement^="right"] {
      @extend .bs-popover-right;
    }

    &[x-placement^="bottom"] {
      @extend .bs-popover-bottom;
    }

    &[x-placement^="left"] {
      @extend .bs-popover-left;
    }
  }


  // Offset the popover to account for the popover arrow
  .popover-header {
    padding: $black-popover-header-padding-y $black-popover-header-padding-x;
    margin-bottom: 0; // Reset the default from Reboot
    @include font-size($black-font-size-base);
    color: $black-popover-header-color;
    background-color: $black-popover-header-bg;
    border-bottom: $black-popover-border-width solid darken($black-popover-header-bg, 5%);
    @include border-top-radius($black-popover-inner-border-radius);

    &:empty {
      display: none;
    }
  }

  .popover-body {
    padding: $black-popover-body-padding-y $black-popover-body-padding-x;
    color: $black-popover-body-color;
  }
}
