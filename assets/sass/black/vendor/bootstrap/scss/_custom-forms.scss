

.black-container {
  // Embedded icons from Open Iconic.
  // Released under MIT and copyright 2014 Waybury.
  // https://useiconic.com/open


  // Checkboxes and radios
  //
  // Base class takes care of all the key behavioral aspects.

  .custom-control {
    position: relative;
    display: block;
    min-height: $black-font-size-base * $black-line-height-base;
    padding-left: $black-custom-control-gutter + $black-custom-control-indicator-size;
  }

  .custom-control-inline {
    display: inline-flex;
    margin-right: $black-custom-control-spacer-x;
  }

  .custom-control-input {
    position: absolute;
    left: 0;
    z-index: -1; // Put the input behind the label so it doesn't overlay text
    width: $black-custom-control-indicator-size;
    height: ($black-font-size-base * $black-line-height-base + $black-custom-control-indicator-size) / 2;
    opacity: 0;

    &:checked ~ .custom-control-label::before {
      color: $black-custom-control-indicator-checked-color;
      border-color: $black-custom-control-indicator-checked-border-color;
      @include gradient-bg($black-custom-control-indicator-checked-bg);
      @include box-shadow($black-custom-control-indicator-checked-box-shadow);
    }

    &:focus ~ .custom-control-label::before {
      // the mixin is not used here to make sure there is feedback
      @if $black-enable-shadows {
        box-shadow: $black-input-box-shadow, $black-input-focus-box-shadow;
      } @else {
        box-shadow: $black-custom-control-indicator-focus-box-shadow;
      }
    }

    &:focus:not(:checked) ~ .custom-control-label::before {
      border-color: $black-custom-control-indicator-focus-border-color;
    }

    &:not(:disabled):active ~ .custom-control-label::before {
      color: $black-custom-control-indicator-active-color;
      background-color: $black-custom-control-indicator-active-bg;
      border-color: $black-custom-control-indicator-active-border-color;
      @include box-shadow($black-custom-control-indicator-active-box-shadow);
    }

    // Use [disabled] and :disabled to work around https://github.com/twbs/bootstrap/issues/28247
    &[disabled],
    &:disabled {
      ~ .custom-control-label {
        color: $black-custom-control-label-disabled-color;

        &::before {
          background-color: $black-custom-control-indicator-disabled-bg;
        }
      }
    }
  }

  // Custom control indicators
  //
  // Build the custom controls out of pseudo-elements.

  .custom-control-label {
    position: relative;
    margin-bottom: 0;
    color: $black-custom-control-label-color;
    vertical-align: top;
    cursor: $black-custom-control-cursor;

    // Background-color and (when enabled) gradient
    &::before {
      position: absolute;
      top: ($black-font-size-base * $black-line-height-base - $black-custom-control-indicator-size) / 2;
      left: -($black-custom-control-gutter + $black-custom-control-indicator-size);
      display: block;
      width: $black-custom-control-indicator-size;
      height: $black-custom-control-indicator-size;
      pointer-events: none;
      content: "";
      background-color: $black-custom-control-indicator-bg;
      border: $black-custom-control-indicator-border-color solid $black-custom-control-indicator-border-width;
      @include box-shadow($black-custom-control-indicator-box-shadow);
    }

    // Foreground (icon)
    &::after {
      position: absolute;
      top: ($black-font-size-base * $black-line-height-base - $black-custom-control-indicator-size) / 2;
      left: -($black-custom-control-gutter + $black-custom-control-indicator-size);
      display: block;
      width: $black-custom-control-indicator-size;
      height: $black-custom-control-indicator-size;
      content: "";
      background: no-repeat 50% / #{$black-custom-control-indicator-bg-size};
    }
  }


  // Checkboxes
  //
  // Tweak just a few things for checkboxes.

  .custom-checkbox {
    .custom-control-label::before {
      @include border-radius($black-custom-checkbox-indicator-border-radius);
    }

    .custom-control-input:checked ~ .custom-control-label {
      &::after {
        background-image: escape-svg($black-custom-checkbox-indicator-icon-checked);
      }
    }

    .custom-control-input:indeterminate ~ .custom-control-label {
      &::before {
        border-color: $black-custom-checkbox-indicator-indeterminate-border-color;
        @include gradient-bg($black-custom-checkbox-indicator-indeterminate-bg);
        @include box-shadow($black-custom-checkbox-indicator-indeterminate-box-shadow);
      }

      &::after {
        background-image: escape-svg($black-custom-checkbox-indicator-icon-indeterminate);
      }
    }

    .custom-control-input:disabled {
      &:checked ~ .custom-control-label::before {
        background-color: $black-custom-control-indicator-checked-disabled-bg;
      }

      &:indeterminate ~ .custom-control-label::before {
        background-color: $black-custom-control-indicator-checked-disabled-bg;
      }
    }
  }

  // Radios
  //
  // Tweak just a few things for radios.

  .custom-radio {
    .custom-control-label::before {
      // stylelint-disable-next-line property-blacklist
      border-radius: $black-custom-radio-indicator-border-radius;
    }

    .custom-control-input:checked ~ .custom-control-label {
      &::after {
        background-image: escape-svg($black-custom-radio-indicator-icon-checked);
      }
    }

    .custom-control-input:disabled {
      &:checked ~ .custom-control-label::before {
        background-color: $black-custom-control-indicator-checked-disabled-bg;
      }
    }
  }


  // switches
  //
  // Tweak a few things for switches

  .custom-switch {
    padding-left: $black-custom-switch-width + $black-custom-control-gutter;

    .custom-control-label {
      &::before {
        left: -($black-custom-switch-width + $black-custom-control-gutter);
        width: $black-custom-switch-width;
        pointer-events: all;
        // stylelint-disable-next-line property-blacklist
        border-radius: $black-custom-switch-indicator-border-radius;
      }

      &::after {
        top: add(($black-font-size-base * $black-line-height-base - $black-custom-control-indicator-size) / 2, $black-custom-control-indicator-border-width * 2);
        left: add(-($black-custom-switch-width + $black-custom-control-gutter), $black-custom-control-indicator-border-width * 2);
        width: $black-custom-switch-indicator-size;
        height: $black-custom-switch-indicator-size;
        background-color: $black-custom-control-indicator-border-color;
        // stylelint-disable-next-line property-blacklist
        border-radius: $black-custom-switch-indicator-border-radius;
        @include transition(transform .15s ease-in-out, $black-custom-forms-transition);
      }
    }

    .custom-control-input:checked ~ .custom-control-label {
      &::after {
        background-color: $black-custom-control-indicator-bg;
        transform: translateX($black-custom-switch-width - $black-custom-control-indicator-size);
      }
    }

    .custom-control-input:disabled {
      &:checked ~ .custom-control-label::before {
        background-color: $black-custom-control-indicator-checked-disabled-bg;
      }
    }
  }


  // Select
  //
  // Replaces the browser default select with a custom one, mostly pulled from
  // https://primer.github.io/.
  //

  .custom-select {
    display: inline-block;
    width: 100%;
    height: $black-custom-select-height;
    padding: $black-custom-select-padding-y ($black-custom-select-padding-x + $black-custom-select-indicator-padding) $black-custom-select-padding-y $black-custom-select-padding-x;
    font-family: $black-custom-select-font-family;
    @include font-size($black-custom-select-font-size);
    font-weight: $black-custom-select-font-weight;
    line-height: $black-custom-select-line-height;
    color: $black-custom-select-color;
    vertical-align: middle;
    background: $black-custom-select-bg $black-custom-select-background;
    border: $black-custom-select-border-width solid $black-custom-select-border-color;
    @include border-radius($black-custom-select-border-radius, 0);
    @include box-shadow($black-custom-select-box-shadow);
    appearance: none;

    &:focus {
      border-color: $black-custom-select-focus-border-color;
      outline: 0;
      @if $black-enable-shadows {
        box-shadow: $black-custom-select-box-shadow, $black-custom-select-focus-box-shadow;
      } @else {
        box-shadow: $black-custom-select-focus-box-shadow;
      }

      &::-ms-value {
        // For visual consistency with other platforms/browsers,
        // suppress the default white text on blue background highlight given to
        // the selected option text when the (still closed) <select> receives focus
        // in IE and (under certain conditions) Edge.
        // See https://github.com/twbs/bootstrap/issues/19398.
        color: $black-input-color;
        background-color: $black-input-bg;
      }
    }

    &[multiple],
    &[size]:not([size="1"]) {
      height: auto;
      padding-right: $black-custom-select-padding-x;
      background-image: none;
    }

    &:disabled {
      color: $black-custom-select-disabled-color;
      background-color: $black-custom-select-disabled-bg;
    }

    // Hides the default caret in IE11
    &::-ms-expand {
      display: none;
    }

    // Remove outline from select box in FF
    &:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 $black-custom-select-color;
    }
  }

  .custom-select-sm {
    height: $black-custom-select-height-sm;
    padding-top: $black-custom-select-padding-y-sm;
    padding-bottom: $black-custom-select-padding-y-sm;
    padding-left: $black-custom-select-padding-x-sm;
    @include font-size($black-custom-select-font-size-sm);
  }

  .custom-select-lg {
    height: $black-custom-select-height-lg;
    padding-top: $black-custom-select-padding-y-lg;
    padding-bottom: $black-custom-select-padding-y-lg;
    padding-left: $black-custom-select-padding-x-lg;
    @include font-size($black-custom-select-font-size-lg);
  }


  // File
  //
  // Custom file input.

  .custom-file {
    position: relative;
    display: inline-block;
    width: 100%;
    height: $black-custom-file-height;
    margin-bottom: 0;
  }

  .custom-file-input {
    position: relative;
    z-index: 2;
    width: 100%;
    height: $black-custom-file-height;
    margin: 0;
    opacity: 0;

    &:focus ~ .custom-file-label {
      border-color: $black-custom-file-focus-border-color;
      box-shadow: $black-custom-file-focus-box-shadow;
    }

    // Use [disabled] and :disabled to work around https://github.com/twbs/bootstrap/issues/28247
    &[disabled] ~ .custom-file-label,
    &:disabled ~ .custom-file-label {
      background-color: $black-custom-file-disabled-bg;
    }

    @each $lang, $value in $black-custom-file-text {
      &:lang(#{$lang}) ~ .custom-file-label::after {
        content: $value;
      }
    }

    ~ .custom-file-label[data-browse]::after {
      content: attr(data-browse);
    }
  }

  .custom-file-label {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    z-index: 1;
    height: $black-custom-file-height;
    padding: $black-custom-file-padding-y $black-custom-file-padding-x;
    font-family: $black-custom-file-font-family;
    font-weight: $black-custom-file-font-weight;
    line-height: $black-custom-file-line-height;
    color: $black-custom-file-color;
    background-color: $black-custom-file-bg;
    border: $black-custom-file-border-width solid $black-custom-file-border-color;
    @include border-radius($black-custom-file-border-radius);
    @include box-shadow($black-custom-file-box-shadow);

    &::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      z-index: 3;
      display: block;
      height: $black-custom-file-height-inner;
      padding: $black-custom-file-padding-y $black-custom-file-padding-x;
      line-height: $black-custom-file-line-height;
      color: $black-custom-file-button-color;
      content: "Browse";
      @include gradient-bg($black-custom-file-button-bg);
      border-left: inherit;
      @include border-radius(0 $black-custom-file-border-radius $black-custom-file-border-radius 0);
    }
  }

  // Range
  //
  // Style range inputs the same across browsers. Vendor-specific rules for pseudo
  // elements cannot be mixed. As such, there are no shared styles for focus or
  // active states on prefixed selectors.

  .custom-range {
    width: 100%;
    height: add($black-custom-range-thumb-height, $black-custom-range-thumb-focus-box-shadow-width * 2);
    padding: 0; // Need to reset padding
    background-color: transparent;
    appearance: none;

    &:focus {
      outline: none;

      // Pseudo-elements must be split across multiple rulesets to have an effect.
      // No box-shadow() mixin for focus accessibility.
      &::-webkit-slider-thumb {
        box-shadow: $black-custom-range-thumb-focus-box-shadow;
      }

      &::-moz-range-thumb {
        box-shadow: $black-custom-range-thumb-focus-box-shadow;
      }

      &::-ms-thumb {
        box-shadow: $black-custom-range-thumb-focus-box-shadow;
      }
    }

    &::-moz-focus-outer {
      border: 0;
    }

    &::-webkit-slider-thumb {
      width: $black-custom-range-thumb-width;
      height: $black-custom-range-thumb-height;
      margin-top: ($black-custom-range-track-height - $black-custom-range-thumb-height) / 2; // Webkit specific
      @include gradient-bg($black-custom-range-thumb-bg);
      border: $black-custom-range-thumb-border;
      @include border-radius($black-custom-range-thumb-border-radius);
      @include box-shadow($black-custom-range-thumb-box-shadow);
      @include transition($black-custom-forms-transition);
      appearance: none;

      &:active {
        @include gradient-bg($black-custom-range-thumb-active-bg);
      }
    }

    &::-webkit-slider-runnable-track {
      width: $black-custom-range-track-width;
      height: $black-custom-range-track-height;
      color: transparent; // Why?
      cursor: $black-custom-range-track-cursor;
      background-color: $black-custom-range-track-bg;
      border-color: transparent;
      @include border-radius($black-custom-range-track-border-radius);
      @include box-shadow($black-custom-range-track-box-shadow);
    }

    &::-moz-range-thumb {
      width: $black-custom-range-thumb-width;
      height: $black-custom-range-thumb-height;
      @include gradient-bg($black-custom-range-thumb-bg);
      border: $black-custom-range-thumb-border;
      @include border-radius($black-custom-range-thumb-border-radius);
      @include box-shadow($black-custom-range-thumb-box-shadow);
      @include transition($black-custom-forms-transition);
      appearance: none;

      &:active {
        @include gradient-bg($black-custom-range-thumb-active-bg);
      }
    }

    &::-moz-range-track {
      width: $black-custom-range-track-width;
      height: $black-custom-range-track-height;
      color: transparent;
      cursor: $black-custom-range-track-cursor;
      background-color: $black-custom-range-track-bg;
      border-color: transparent; // Firefox specific?
      @include border-radius($black-custom-range-track-border-radius);
      @include box-shadow($black-custom-range-track-box-shadow);
    }

    &::-ms-thumb {
      width: $black-custom-range-thumb-width;
      height: $black-custom-range-thumb-height;
      margin-top: 0; // Edge specific
      margin-right: $black-custom-range-thumb-focus-box-shadow-width; // Workaround that overflowed box-shadow is hidden.
      margin-left: $black-custom-range-thumb-focus-box-shadow-width; // Workaround that overflowed box-shadow is hidden.
      @include gradient-bg($black-custom-range-thumb-bg);
      border: $black-custom-range-thumb-border;
      @include border-radius($black-custom-range-thumb-border-radius);
      @include box-shadow($black-custom-range-thumb-box-shadow);
      @include transition($black-custom-forms-transition);
      appearance: none;

      &:active {
        @include gradient-bg($black-custom-range-thumb-active-bg);
      }
    }

    &::-ms-track {
      width: $black-custom-range-track-width;
      height: $black-custom-range-track-height;
      color: transparent;
      cursor: $black-custom-range-track-cursor;
      background-color: transparent;
      border-color: transparent;
      border-width: $black-custom-range-thumb-height / 2;
      @include box-shadow($black-custom-range-track-box-shadow);
    }

    &::-ms-fill-lower {
      background-color: $black-custom-range-track-bg;
      @include border-radius($black-custom-range-track-border-radius);
    }

    &::-ms-fill-upper {
      margin-right: 15px; // arbitrary?
      background-color: $black-custom-range-track-bg;
      @include border-radius($black-custom-range-track-border-radius);
    }

    &:disabled {
      &::-webkit-slider-thumb {
        background-color: $black-custom-range-thumb-disabled-bg;
      }

      &::-webkit-slider-runnable-track {
        cursor: default;
      }

      &::-moz-range-thumb {
        background-color: $black-custom-range-thumb-disabled-bg;
      }

      &::-moz-range-track {
        cursor: default;
      }

      &::-ms-thumb {
        background-color: $black-custom-range-thumb-disabled-bg;
      }
    }
  }

  .custom-control-label::before,
  .custom-file-label,
  .custom-select {
    @include transition($black-custom-forms-transition);
  }
}
