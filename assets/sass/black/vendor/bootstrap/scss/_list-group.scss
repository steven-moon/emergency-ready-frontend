

.black-container {
  // Base class
  //
  // Easily usable on <ul>, <ol>, or <div>.

  .list-group {
    display: flex;
    flex-direction: column;

    // No need to set list-style: none; since .list-group-item is block level
    padding-left: 0; // reset padding because ul and ol
    margin-bottom: 0;
  }


  // Interactive list items
  //
  // Use anchor or button elements instead of `li`s or `div`s to create interactive
  // list items. Includes an extra `.active` modifier class for selected items.

  .list-group-item-action {
    width: 100%; // For `<button>`s (anchors become 100% by default though)
    color: $black-list-group-action-color;
    text-align: inherit; // For `<button>`s (anchors inherit)

    // Hover state
    @include hover-focus() {
      z-index: 1; // Place hover/focus items above their siblings for proper border styling
      color: $black-list-group-action-hover-color;
      text-decoration: none;
      background-color: $black-list-group-hover-bg;
    }

    &:active {
      color: $black-list-group-action-active-color;
      background-color: $black-list-group-action-active-bg;
    }
  }


  // Individual list items
  //
  // Use on `li`s or `div`s within the `.list-group` parent.

  .list-group-item {
    position: relative;
    display: block;
    padding: $black-list-group-item-padding-y $black-list-group-item-padding-x;
    color: $black-list-group-color;
    background-color: $black-list-group-bg;
    border: $black-list-group-border-width solid $black-list-group-border-color;

    &:first-child {
      @include border-top-radius($black-list-group-border-radius);
    }

    &:last-child {
      @include border-bottom-radius($black-list-group-border-radius);
    }

    &.disabled,
    &:disabled {
      color: $black-list-group-disabled-color;
      pointer-events: none;
      background-color: $black-list-group-disabled-bg;
    }

    // Include both here for `<a>`s and `<button>`s
    &.active {
      z-index: 2; // Place active items above their siblings for proper border styling
      color: $black-list-group-active-color;
      background-color: $black-list-group-active-bg;
      border-color: $black-list-group-active-border-color;
    }

    & + & {
      border-top-width: 0;

      &.active {
        margin-top: -$black-list-group-border-width;
        border-top-width: $black-list-group-border-width;
      }
    }
  }


  // Horizontal
  //
  // Change the layout of list group items from vertical (default) to horizontal.

  @each $black-breakpoint in map-keys($black-grid-breakpoints) {
    @include black-media-breakpoint-up($black-breakpoint) {
      $black-infix: black-breakpoint-infix($black-breakpoint, $black-grid-breakpoints);

      .list-group-horizontal#{$black-infix} {
        flex-direction: row;

        .list-group-item {
          &:first-child {
            @include border-bottom-left-radius($black-list-group-border-radius);
            @include border-top-right-radius(0);
          }

          &:last-child {
            @include border-top-right-radius($black-list-group-border-radius);
            @include border-bottom-left-radius(0);
          }

          &.active {
            margin-top: 0;
          }

          & + .list-group-item {
            border-top-width: $black-list-group-border-width;
            border-left-width: 0;

            &.active {
              margin-left: -$black-list-group-border-width;
              border-left-width: $black-list-group-border-width;
            }
          }
        }
      }
    }
  }


  // Flush list items
  //
  // Remove borders and border-radius to keep list group items edge-to-edge. Most
  // useful within other components (e.g., cards).

  .list-group-flush {
    .list-group-item {
      border-right-width: 0;
      border-left-width: 0;
      @include border-radius(0);

      &:first-child {
        border-top-width: 0;
      }
    }

    &:last-child {
      .list-group-item:last-child {
        border-bottom-width: 0;
      }
    }
  }


  // Contextual variants
  //
  // Add modifier classes to change text and background color on individual items.
  // Organizationally, this must come after the `:hover` states.

  @each $color, $value in $black-theme-colors {
    @include list-group-item-variant($color, theme-color-level($color, -9), theme-color-level($color, 6));
  }
}
